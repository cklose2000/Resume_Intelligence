name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run check
      continue-on-error: true
    
    - name: Run tests
      run: npm run test:ci -- --reporter=json --outputFile=test-metrics.json
      env:
        NODE_OPTIONS: --max-old-space-size=4096
        TEST_CHUNK_SIZE: 5
        TEST_MAX_RETRIES: 3
      continue-on-error: true
    
    - name: Analyze test performance
      if: always()
      run: |
        cd client
        node scripts/analyze-test-performance.js test-metrics.json || true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          client/test-results/
          client/coverage/
          client/test-metrics.json
          client/test-performance-report.*
          client/.test-history.json
    
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-summary:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        path: test-results-all
    
    - name: Publish test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Results
        path: 'test-results-all/**/junit.xml'
        reporter: jest-junit
        fail-on-error: false